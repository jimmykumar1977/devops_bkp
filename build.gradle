plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'org.ajoberstar.grgit' version '1.7.2'
	id 'org.ajoberstar.release-opinion' version '1.7.2'
}
import org.ajoberstar.gradle.git.release.opinion.Strategies

group = 'jimmyk'
sourceCompatibility = '1.8'

sourceSets {
	integration {
		java.srcDir "$projectDir/src/integration/java"
		resources.srcDir "$projectDir/src/integration/resources"
		compileClasspath += main.output + test.output
		runtimeClasspath += main.output + test.output
	}
}
task integrationTest(type: Test) {
	description = 'Runs the integration tests.'
	group = 'verification'
	testClassesDirs = sourceSets.integration.output.classesDirs
	classpath = sourceSets.integration.runtimeClasspath
	outputs.upToDateWhen { false }
	mustRunAfter test
}

check.dependsOn integrationTest

release {
	versionStrategy Strategies.FINAL
	defaultVersionStrategy Strategies.SNAPSHOT
	tagStrategy {
		generateMessage = { version -> "Version $project.version" }
	}
}
repositories {
	mavenCentral()
}

configurations {
	integrationImplementation.extendsFrom testImplementation
	integrationRuntime.extendsFrom testRuntime
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}
